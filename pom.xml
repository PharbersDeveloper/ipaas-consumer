<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pharbers</groupId>
    <artifactId>ipaas-consumer</artifactId>
    <version>0.1</version>


    <!-- Maven profiles allow you to support both Scala 2.10, 2.11 and Scala 2.12 with
      the right dependencies for modules specified for each version separately -->
    <profiles>
        <profile>
            <id>scala-2.11</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <scalaVersion>2.11.8</scalaVersion>
                <scalaBinaryVersion>2.11</scalaBinaryVersion>
<!--                <spark.version>2.3.0</spark.version>-->
<!--                <hadoop.version>2.7.2</hadoop.version>-->
                <scalatest.version>3.0.1</scalatest.version>
                <log4j.version>2.11.2</log4j.version>
<!--                <jackson.version>2.9.8</jackson.version>-->
                <gson.version>2.8.5</gson.version>
            </properties>

            <repositories>
                <repository>
                    <id>Sonatype-public</id>
                    <name>SnakeYAML repository</name>
                    <url>http://oss.sonatype.org/content/groups/public/</url>
                </repository>
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-kafka</artifactId>
                    <version>1.0</version>
                </dependency>

                <!--yaml-->
<!--                <dependency>-->
<!--                    <groupId>org.yaml</groupId>-->
<!--                    <artifactId>snakeyaml</artifactId>-->
<!--                    <version>1.25-SNAPSHOT</version>-->
<!--                </dependency>-->

                <!--json-->
                <dependency>
                    <groupId>com.google.code.gson</groupId>
                    <artifactId>gson</artifactId>
                    <version>${gson.version}</version>
                </dependency>
<!--                <dependency>-->
<!--                    <groupId>com.fasterxml.jackson.core</groupId>-->
<!--                    <artifactId>jackson-core</artifactId>-->
<!--                    <version>${jackson.version}</version>-->
<!--                </dependency>-->

                <!-- https://mvnrepository.com/artifact/org.scalaj/scalaj-http -->
<!--                <dependency>-->
<!--                    <groupId>org.scalaj</groupId>-->
<!--                    <artifactId>scalaj-http_${scalaBinaryVersion}</artifactId>-->
<!--                    <version>2.3.0</version>-->
<!--                </dependency>-->

                <!--test-->
                <dependency>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest_${scalaBinaryVersion}</artifactId>
                    <version>${scalatest.version}</version>
                    <scope>test</scope>
                </dependency>

                <!--log4j-->
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                    <version>${log4j.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                    <version>${log4j.version}</version>
                </dependency>
                <!--oss-->
                <dependency>
                    <groupId>com.aliyun.oss</groupId>
                    <artifactId>aliyun-sdk-oss</artifactId>
                    <version>3.5.0</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resource</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>1.8.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--enable scalatest-->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--scala支持-->
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>scala-compile-first</id>-->
<!--                        <goals>-->
<!--                            <goal>compile</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <includes>-->
<!--                                <include>**/*.scala</include>-->
<!--                            </includes>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>scala-test-compile</id>-->
<!--                        <goals>-->
<!--                            <goal>testCompile</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
            </plugin>
            <!--将依赖打包成一个jar，与上面主类设置冲突-->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>com.pharbers.ipaas.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>